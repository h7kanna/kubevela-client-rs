/*
 * Kubevela api doc
 *
 * Kubevela api doc
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: feedback@mail.kubevela.io
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct CommonPeriodAppStatus {
    #[serde(rename = "appliedResources", skip_serializing_if = "Option::is_none")]
    pub applied_resources: Option<Vec<crate::models::CommonPeriodClusterObjectReference>>,
    #[serde(rename = "components", skip_serializing_if = "Option::is_none")]
    pub components: Option<Vec<crate::models::V1PeriodObjectReference>>,
    #[serde(rename = "conditions", skip_serializing_if = "Option::is_none")]
    pub conditions: Option<Vec<crate::models::ConditionPeriodCondition>>,
    #[serde(rename = "latestRevision", skip_serializing_if = "Option::is_none")]
    pub latest_revision: Option<Box<crate::models::CommonPeriodRevision>>,
    #[serde(rename = "observedGeneration", skip_serializing_if = "Option::is_none")]
    pub observed_generation: Option<i64>,
    #[serde(rename = "policy", skip_serializing_if = "Option::is_none")]
    pub policy: Option<Vec<crate::models::CommonPeriodPolicyStatus>>,
    #[serde(rename = "services", skip_serializing_if = "Option::is_none")]
    pub services: Option<Vec<crate::models::CommonPeriodApplicationComponentStatus>>,
    #[serde(rename = "status", skip_serializing_if = "Option::is_none")]
    pub status: Option<String>,
    #[serde(rename = "workflow", skip_serializing_if = "Option::is_none")]
    pub workflow: Option<Box<crate::models::CommonPeriodWorkflowStatus>>,
}

impl CommonPeriodAppStatus {
    pub fn new() -> CommonPeriodAppStatus {
        CommonPeriodAppStatus {
            applied_resources: None,
            components: None,
            conditions: None,
            latest_revision: None,
            observed_generation: None,
            policy: None,
            services: None,
            status: None,
            workflow: None,
        }
    }
}


