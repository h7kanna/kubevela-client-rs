/*
 * Kubevela api doc
 *
 * Kubevela api doc
 *
 * The version of the OpenAPI document: 1.9.7
 * Contact: feedback@mail.kubevela.io
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct ChartPeriodDependency {
    #[serde(rename = "alias", skip_serializing_if = "Option::is_none")]
    pub alias: Option<String>,
    #[serde(rename = "condition", skip_serializing_if = "Option::is_none")]
    pub condition: Option<String>,
    #[serde(rename = "enabled", skip_serializing_if = "Option::is_none")]
    pub enabled: Option<bool>,
    #[serde(rename = "import-values", skip_serializing_if = "Option::is_none")]
    pub import_values: Option<Vec<serde_json::Value>>,
    #[serde(rename = "name")]
    pub name: String,
    #[serde(rename = "repository")]
    pub repository: String,
    #[serde(rename = "tags", skip_serializing_if = "Option::is_none")]
    pub tags: Option<Vec<String>>,
    #[serde(rename = "version", skip_serializing_if = "Option::is_none")]
    pub version: Option<String>,
}

impl ChartPeriodDependency {
    pub fn new(name: String, repository: String) -> ChartPeriodDependency {
        ChartPeriodDependency {
            alias: None,
            condition: None,
            enabled: None,
            import_values: None,
            name,
            repository,
            tags: None,
            version: None,
        }
    }
}


