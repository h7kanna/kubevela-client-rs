/*
 * Kubevela api doc
 *
 * Kubevela api doc
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: feedback@mail.kubevela.io
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct V1alpha1PeriodWorkflowRunStatus {
    #[serde(rename = "conditions", skip_serializing_if = "Option::is_none")]
    pub conditions: Option<Vec<crate::models::ConditionPeriodCondition>>,
    #[serde(rename = "contextBackend", skip_serializing_if = "Option::is_none")]
    pub context_backend: Option<Box<crate::models::V1PeriodObjectReference>>,
    #[serde(rename = "endTime", skip_serializing_if = "Option::is_none")]
    pub end_time: Option<String>,
    #[serde(rename = "finished")]
    pub finished: bool,
    #[serde(rename = "message", skip_serializing_if = "Option::is_none")]
    pub message: Option<String>,
    #[serde(rename = "mode")]
    pub mode: Box<crate::models::V1alpha1PeriodWorkflowExecuteMode>,
    #[serde(rename = "startTime", skip_serializing_if = "Option::is_none")]
    pub start_time: Option<String>,
    #[serde(rename = "status")]
    pub status: String,
    #[serde(rename = "steps", skip_serializing_if = "Option::is_none")]
    pub steps: Option<Vec<crate::models::V1alpha1PeriodWorkflowStepStatus>>,
    #[serde(rename = "suspend")]
    pub suspend: bool,
    #[serde(rename = "suspendState", skip_serializing_if = "Option::is_none")]
    pub suspend_state: Option<String>,
    #[serde(rename = "terminated")]
    pub terminated: bool,
}

impl V1alpha1PeriodWorkflowRunStatus {
    pub fn new(finished: bool, mode: crate::models::V1alpha1PeriodWorkflowExecuteMode, status: String, suspend: bool, terminated: bool) -> V1alpha1PeriodWorkflowRunStatus {
        V1alpha1PeriodWorkflowRunStatus {
            conditions: None,
            context_backend: None,
            end_time: None,
            finished,
            message: None,
            mode: Box::new(mode),
            start_time: None,
            status,
            steps: None,
            suspend,
            suspend_state: None,
            terminated,
        }
    }
}


