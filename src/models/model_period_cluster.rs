/*
 * Kubevela api doc
 *
 * Kubevela api doc
 *
 * The version of the OpenAPI document: 1.9.7
 * Contact: feedback@mail.kubevela.io
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct ModelPeriodCluster {
    #[serde(rename = "alias")]
    pub alias: String,
    #[serde(rename = "apiServerURL")]
    pub api_server_url: String,
    #[serde(rename = "createTime")]
    pub create_time: String,
    #[serde(rename = "dashboardURL")]
    pub dashboard_url: String,
    #[serde(rename = "description")]
    pub description: String,
    #[serde(rename = "icon")]
    pub icon: String,
    #[serde(rename = "kubeConfig")]
    pub kube_config: String,
    #[serde(rename = "kubeConfigSecret")]
    pub kube_config_secret: String,
    #[serde(rename = "labels")]
    pub labels: ::std::collections::HashMap<String, String>,
    #[serde(rename = "name")]
    pub name: String,
    #[serde(rename = "provider")]
    pub provider: Box<crate::models::ModelPeriodProviderInfo>,
    #[serde(rename = "reason")]
    pub reason: String,
    #[serde(rename = "status")]
    pub status: String,
    #[serde(rename = "updateTime")]
    pub update_time: String,
}

impl ModelPeriodCluster {
    pub fn new(alias: String, api_server_url: String, create_time: String, dashboard_url: String, description: String, icon: String, kube_config: String, kube_config_secret: String, labels: ::std::collections::HashMap<String, String>, name: String, provider: crate::models::ModelPeriodProviderInfo, reason: String, status: String, update_time: String) -> ModelPeriodCluster {
        ModelPeriodCluster {
            alias,
            api_server_url,
            create_time,
            dashboard_url,
            description,
            icon,
            kube_config,
            kube_config_secret,
            labels,
            name,
            provider: Box::new(provider),
            reason,
            status,
            update_time,
        }
    }
}


