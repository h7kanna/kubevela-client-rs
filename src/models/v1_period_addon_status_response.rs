/*
 * Kubevela api doc
 *
 * Kubevela api doc
 *
 * The version of the OpenAPI document: 1.9.7
 * Contact: feedback@mail.kubevela.io
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct V1PeriodAddonStatusResponse {
    #[serde(rename = "allClusters", skip_serializing_if = "Option::is_none")]
    pub all_clusters: Option<Vec<crate::models::V1PeriodNameAlias>>,
    #[serde(rename = "appStatus", skip_serializing_if = "Option::is_none")]
    pub app_status: Option<Box<crate::models::CommonPeriodAppStatus>>,
    #[serde(rename = "args")]
    pub args: serde_json::Value,
    #[serde(rename = "clusters", skip_serializing_if = "Option::is_none")]
    pub clusters: Option<::std::collections::HashMap<String, serde_json::Value>>,
    #[serde(rename = "enabling_progress", skip_serializing_if = "Option::is_none")]
    pub enabling_progress: Option<Box<crate::models::V1PeriodEnablingProgress>>,
    #[serde(rename = "installedVersion", skip_serializing_if = "Option::is_none")]
    pub installed_version: Option<String>,
    #[serde(rename = "name")]
    pub name: String,
    #[serde(rename = "phase")]
    pub phase: String,
}

impl V1PeriodAddonStatusResponse {
    pub fn new(args: serde_json::Value, name: String, phase: String) -> V1PeriodAddonStatusResponse {
        V1PeriodAddonStatusResponse {
            all_clusters: None,
            app_status: None,
            args,
            clusters: None,
            enabling_progress: None,
            installed_version: None,
            name,
            phase,
        }
    }
}


