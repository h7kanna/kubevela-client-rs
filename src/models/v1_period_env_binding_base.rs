/*
 * Kubevela api doc
 *
 * Kubevela api doc
 *
 * The version of the OpenAPI document: 1.9.7
 * Contact: feedback@mail.kubevela.io
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct V1PeriodEnvBindingBase {
    #[serde(rename = "alias", skip_serializing_if = "Option::is_none")]
    pub alias: Option<String>,
    #[serde(rename = "appDeployName")]
    pub app_deploy_name: String,
    #[serde(rename = "appDeployNamespace")]
    pub app_deploy_namespace: String,
    #[serde(rename = "componentSelector", skip_serializing_if = "Option::is_none")]
    pub component_selector: Option<Box<crate::models::V1PeriodComponentSelector>>,
    #[serde(rename = "createTime")]
    pub create_time: String,
    #[serde(rename = "description", skip_serializing_if = "Option::is_none")]
    pub description: Option<String>,
    #[serde(rename = "name")]
    pub name: String,
    #[serde(rename = "targetNames")]
    pub target_names: Vec<String>,
    #[serde(rename = "targets", skip_serializing_if = "Option::is_none")]
    pub targets: Option<Vec<crate::models::V1PeriodEnvBindingTarget>>,
    #[serde(rename = "updateTime")]
    pub update_time: String,
    #[serde(rename = "workflow")]
    pub workflow: Box<crate::models::V1PeriodNameAlias>,
}

impl V1PeriodEnvBindingBase {
    pub fn new(app_deploy_name: String, app_deploy_namespace: String, create_time: String, name: String, target_names: Vec<String>, update_time: String, workflow: crate::models::V1PeriodNameAlias) -> V1PeriodEnvBindingBase {
        V1PeriodEnvBindingBase {
            alias: None,
            app_deploy_name,
            app_deploy_namespace,
            component_selector: None,
            create_time,
            description: None,
            name,
            target_names,
            targets: None,
            update_time,
            workflow: Box::new(workflow),
        }
    }
}


