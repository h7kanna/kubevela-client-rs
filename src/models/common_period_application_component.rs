/*
 * Kubevela api doc
 *
 * Kubevela api doc
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: feedback@mail.kubevela.io
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct CommonPeriodApplicationComponent {
    #[serde(rename = "dependsOn", skip_serializing_if = "Option::is_none")]
    pub depends_on: Option<Vec<String>>,
    #[serde(rename = "externalRevision", skip_serializing_if = "Option::is_none")]
    pub external_revision: Option<String>,
    #[serde(rename = "inputs", skip_serializing_if = "Option::is_none")]
    pub inputs: Option<Vec<crate::models::V1alpha1PeriodInputItem>>,
    #[serde(rename = "name")]
    pub name: String,
    #[serde(rename = "outputs", skip_serializing_if = "Option::is_none")]
    pub outputs: Option<Vec<crate::models::V1alpha1PeriodOutputItem>>,
    #[serde(rename = "properties", skip_serializing_if = "Option::is_none")]
    pub properties: Option<String>,
    #[serde(rename = "scopes", skip_serializing_if = "Option::is_none")]
    pub scopes: Option<::std::collections::HashMap<String, String>>,
    #[serde(rename = "traits", skip_serializing_if = "Option::is_none")]
    pub traits: Option<Vec<crate::models::CommonPeriodApplicationTrait>>,
    #[serde(rename = "type")]
    pub r#type: String,
}

impl CommonPeriodApplicationComponent {
    pub fn new(name: String, r#type: String) -> CommonPeriodApplicationComponent {
        CommonPeriodApplicationComponent {
            depends_on: None,
            external_revision: None,
            inputs: None,
            name,
            outputs: None,
            properties: None,
            scopes: None,
            traits: None,
            r#type,
        }
    }
}


