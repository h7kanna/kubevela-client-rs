/*
 * Kubevela api doc
 *
 * Kubevela api doc
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: feedback@mail.kubevela.io
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct V1PeriodConfigFile {
    #[serde(rename = "architecture")]
    pub architecture: String,
    #[serde(rename = "author", skip_serializing_if = "Option::is_none")]
    pub author: Option<String>,
    #[serde(rename = "config")]
    pub config: Box<crate::models::V1PeriodConfig>,
    #[serde(rename = "container", skip_serializing_if = "Option::is_none")]
    pub container: Option<String>,
    #[serde(rename = "created", skip_serializing_if = "Option::is_none")]
    pub created: Option<String>,
    #[serde(rename = "docker_version", skip_serializing_if = "Option::is_none")]
    pub docker_version: Option<String>,
    #[serde(rename = "history", skip_serializing_if = "Option::is_none")]
    pub history: Option<Vec<crate::models::V1PeriodHistory>>,
    #[serde(rename = "os")]
    pub os: String,
    #[serde(rename = "os.version", skip_serializing_if = "Option::is_none")]
    pub os_period_version: Option<String>,
    #[serde(rename = "rootfs")]
    pub rootfs: Box<crate::models::V1PeriodRootFs>,
    #[serde(rename = "variant", skip_serializing_if = "Option::is_none")]
    pub variant: Option<String>,
}

impl V1PeriodConfigFile {
    pub fn new(architecture: String, config: crate::models::V1PeriodConfig, os: String, rootfs: crate::models::V1PeriodRootFs) -> V1PeriodConfigFile {
        V1PeriodConfigFile {
            architecture,
            author: None,
            config: Box::new(config),
            container: None,
            created: None,
            docker_version: None,
            history: None,
            os,
            os_period_version: None,
            rootfs: Box::new(rootfs),
            variant: None,
        }
    }
}


