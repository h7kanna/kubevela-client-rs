/*
 * Kubevela api doc
 *
 * Kubevela api doc
 *
 * The version of the OpenAPI document: 1.9.7
 * Contact: feedback@mail.kubevela.io
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct TypesPeriodIncludes {
    #[serde(rename = "catalog", skip_serializing_if = "Option::is_none")]
    pub catalog: Option<String>,
    #[serde(rename = "icon")]
    pub icon: String,
    #[serde(rename = "label")]
    pub label: String,
    #[serde(rename = "name")]
    pub name: String,
    #[serde(rename = "permission", skip_serializing_if = "Option::is_none")]
    pub permission: Option<Box<crate::models::TypesPeriodPermission>>,
    #[serde(rename = "relatedRoute")]
    pub related_route: Vec<String>,
    #[serde(rename = "to")]
    pub to: String,
    #[serde(rename = "type")]
    pub r#type: String,
    #[serde(rename = "workspace")]
    pub workspace: Box<crate::models::TypesPeriodWorkspace>,
}

impl TypesPeriodIncludes {
    pub fn new(icon: String, label: String, name: String, related_route: Vec<String>, to: String, r#type: String, workspace: crate::models::TypesPeriodWorkspace) -> TypesPeriodIncludes {
        TypesPeriodIncludes {
            catalog: None,
            icon,
            label,
            name,
            permission: None,
            related_route,
            to,
            r#type,
            workspace: Box::new(workspace),
        }
    }
}


