/*
 * Kubevela api doc
 *
 * Kubevela api doc
 *
 * The version of the OpenAPI document: 1.9.7
 * Contact: feedback@mail.kubevela.io
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct CommonPeriodApplicationComponentStatus {
    #[serde(rename = "cluster", skip_serializing_if = "Option::is_none")]
    pub cluster: Option<String>,
    #[serde(rename = "env", skip_serializing_if = "Option::is_none")]
    pub env: Option<String>,
    #[serde(rename = "healthy")]
    pub healthy: bool,
    #[serde(rename = "message", skip_serializing_if = "Option::is_none")]
    pub message: Option<String>,
    #[serde(rename = "name")]
    pub name: String,
    #[serde(rename = "namespace", skip_serializing_if = "Option::is_none")]
    pub namespace: Option<String>,
    #[serde(rename = "scopes", skip_serializing_if = "Option::is_none")]
    pub scopes: Option<Vec<crate::models::V1PeriodObjectReference>>,
    #[serde(rename = "traits", skip_serializing_if = "Option::is_none")]
    pub traits: Option<Vec<crate::models::CommonPeriodApplicationTraitStatus>>,
    #[serde(rename = "workloadDefinition", skip_serializing_if = "Option::is_none")]
    pub workload_definition: Option<Box<crate::models::CommonPeriodWorkloadGvk>>,
}

impl CommonPeriodApplicationComponentStatus {
    pub fn new(healthy: bool, name: String) -> CommonPeriodApplicationComponentStatus {
        CommonPeriodApplicationComponentStatus {
            cluster: None,
            env: None,
            healthy,
            message: None,
            name,
            namespace: None,
            scopes: None,
            traits: None,
            workload_definition: None,
        }
    }
}


