/*
 * Kubevela api doc
 *
 * Kubevela api doc
 *
 * The version of the OpenAPI document: 1.9.7
 * Contact: feedback@mail.kubevela.io
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct V1PeriodClusterBase {
    #[serde(rename = "alias", skip_serializing_if = "Option::is_none")]
    pub alias: Option<String>,
    #[serde(rename = "apiServerURL")]
    pub api_server_url: String,
    #[serde(rename = "dashboardURL")]
    pub dashboard_url: String,
    #[serde(rename = "description", skip_serializing_if = "Option::is_none")]
    pub description: Option<String>,
    #[serde(rename = "icon", skip_serializing_if = "Option::is_none")]
    pub icon: Option<String>,
    #[serde(rename = "labels", skip_serializing_if = "Option::is_none")]
    pub labels: Option<::std::collections::HashMap<String, String>>,
    #[serde(rename = "name")]
    pub name: String,
    #[serde(rename = "providerInfo")]
    pub provider_info: Box<crate::models::ModelPeriodProviderInfo>,
    #[serde(rename = "reason")]
    pub reason: String,
    #[serde(rename = "status")]
    pub status: String,
}

impl V1PeriodClusterBase {
    pub fn new(api_server_url: String, dashboard_url: String, name: String, provider_info: crate::models::ModelPeriodProviderInfo, reason: String, status: String) -> V1PeriodClusterBase {
        V1PeriodClusterBase {
            alias: None,
            api_server_url,
            dashboard_url,
            description: None,
            icon: None,
            labels: None,
            name,
            provider_info: Box::new(provider_info),
            reason,
            status,
        }
    }
}


